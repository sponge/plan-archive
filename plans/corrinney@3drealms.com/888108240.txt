
*** Ion Storm's Finger Server

User name: corrinne
Plan modified: Sat Feb 21 20:39:18 1998

02-18-98
There is hardware support of full-screen anti-aliasing on certain cards, like the new PowerVR prototype, that does NOT have a complete 4x to 16x overhead, because the intermediate oversampled screen does not spend the time to perform video pixel writes.
Non full-screen anti-aliasing on most cards looks much worse than full-screen because full-screen anti-alias modes actually depict data at 4x the resolution, and there is detail that is actually added from sampling from the ultra-hi-res intermediate.

I have a question for IHV regarding anti-aliasing.
At each rasterization destination there is an x, but also a dx, and the contribution of these dx's actually produces better error correction of undersampling than the brute-force/non-source-detail-aware method of mooging/averaging, which is what BOTH full-screen AND non-full-screen anti-aliasing currently performs.
The effect of dx error diffusion, versus oversampling and averaging, is a much sharper image than even full-screen anti-aliasing.
Any chance an IHV would implement "true" sampling error diffusion? Is this expensive to burn in silicon?

Speaking of burning in silicon, it is true that with vertex lighting versus light mapping there is the problem that the hardware implemention of color interpolant is not perspective corrected in gouraud shading, which leads to artifacting.
I have heard that it is expensive to burn silicon (all the dividends) to perspective correct color interpolant, but some low cost vendor like S3 is planning to burn perspective correct color interpolation in their next prototype boards.
I wonder how much more expensive it is.
Is it more expensive than supporting free muti-texture, as in the performance of single-source texturing is "identical" to dual-source texturing. (I have to specify this clearly because some IHV's have taken to claiming multi-texture support by having API that supports having a second source of texture, but it is actually twice as slow; which is effectly the same as the ISV texturing twice herself.)
Because this sounds expensive too.
The point is that in order to "correct" a "mathematically incorrect" implementation of color interpolation, the software developer has to store in RAM and send down twice the amount of texture in the form of light map AND pay for the extra cost of dual-source texturing. Is the combined cost (remember the texture cache RAM cost too) of all this greater than burning perspective correct color?

Perspective correct color will become more significant as all our engines leap to next level of geometry and texture complexity. It is not just a matter of clipping. As I and others move to computationally complex geometry that simplifies into the distance and vertices with RGB disappear into the gouraud-interpolated space of the new polygon, I require that fragment to remain stable at the transition point whether or not that z-spaced perspective correct vertex sits there to pin the RGB.

These are among the many basics (also gamma standardization) I would like the IHV's to spend some brain juice on before they embark on burning geometry and transformation on graphics chips. Processors currently does an excellent job of transforming, and as far as I can tell, most ISV's high level geometry representation and pipeline for our next gen engines diverge quite a bit. Let us ISV's reach a consensus of technical superiority of high level geometry representation first, if such consensus can ever be made.

Overall, I thank the IHV's for pushing the performance of polygon set up and fill rate to the point where I even dare ask such questions.

02-09-98
I went to Microsoft and spent time with a lot of good friends, like Ray Gresko from LucasArts and Herb Marselas from Intel, and saw some old (but still good looking :) ) faces like John Ratcliff, sound programming legend. I was touched by the presence of Jim Blinn, graphics legend.

I missed seeing NVDIA (ex-SGI) friends like Michael Gold. He would not stoop to soil his soles at a Direct X event. ;p But I heard his NVIDIA co-workers are impressed with his OpenGL work. Maybe he will implement and optimize glExecute3DShooter when he is done and put all of us 3D programmers out of work.

It was interesting that Blinn is researching on precision of "standard transformation" math. I myself am also noticing the "standard" way may be insufficient to proceduralize geometry.

It was electrifying to stay up all night browsing SIGGRAPH proceedings with friends. It was humorous to dance with IHV's. ( I hope that embarrassment gets me more cards. I did not see Brian Hook stooping so low. ;p ) More seriously, I was happy to have had productive and pleasant discussions with many IHV's. I have one word to summarize my greatest peeve: subpixel (and doing it right). I also had productive and pleasant discussions with the DX team.

It saddens me greatly to witness the antagonism between the IHV's and Microsoft. Let us remember we are all here to create the best experience AND installation ease to gamers, not to execute our master plot of world domination or massage our egos of technical righteousness. I think somewhere in this API war, the computer user is left in the cold when issues like driver installation is not high on the heated debate.

Readers, please do not take this statement as my or ION's position on Direct X. I am not ready to make any yet. If you must know, I am an API agnostic. I do not have proof God exists, but many believe He is OpenGL. OpenGL is an extremely well designed API, and Direct X is stealing a lot of its good ideas, but it is still not as well designed as OpenGL.

Mark Kilgard is no longer at SGI. That is slightly disturbing.

So thank you Ray and Herb for the enjoyable conversation and pleasant company. John, I will mail you the code tonight sometime. But then you owe me a portrait. :)

1-4-98
DISCLAIMER: Since ION is licensing the Q2 engine, and since we are using it in a way that may or may not be similar to Q2, anything I am doing is an attempt (and possibly wrong-headed) to assist development of ION games, which has NOTHING to do with Q2 as a shipping game or technology FOR Q2. I regret very much any thing in my .plan file is construed as a "smack down" of Q2 as a shipping game, or as technology for Q2.

Q2 is a fine game that is developed in an amazingly short amount of time. Carmack is still the KING of scanline rasterizer, and his ability to adapt quickly to any new hardware, with the combination of Hook's hardware expertise, and Cash's multiple player programming experience, makes them an impressive team of technology developer. We all look forward to Trinity.

I am new to this .plan thing. I am used to e-mail in which the audience is people I have a (technical) history and context, and I can afford to be more careless. Now I realize I have to be more careful about all the possible permutations my .plan words can be interpreted by the general public.

1-3-98
OK, better New Year's resolution: Not piss anyone off and have him fight with me.
More seriously, removed more bugs of my LOD code, now rotationally it is stable too. And wants to rewrite criteria functions with a less worse idea than what I did. 
Thank you to all of you who mailed me k00l programming questions and discussions. And for those who are appalled by how I butcher the English language with my (I will admit at a lot of times probably WRONG, you should hear me pronounce them sometimes :) ) use of programming words, please don't read my .plan and hurt yourself. ;p
To debug my LOD, I put in a thing to freeze the POV that I am LOD-ing from and allow me to roam through the frozen world so I can examine my generated little LOD'ed Alias shells in Quake. It is a barrel of geeky fun. (I am easily amused, as well as easily impressed. :) Keeps me happy.)

1-1-98
My New Year's resolution so far is as follows:
Rewrite Quake 2 geometry pipeline math operations (3x4) into symmetrical quaternion math operations, to minimize data moves and copies, flow Pentium data accesses better, and decresase multiplies and data moves inside matrix operations. Done. (Fixed some math bugs during the re-write.) (Boy was that a lot of typing.)
Rewrite Q2 dynamic object (Alias model) geometry and drawing pipeline to improve performance. Done.
Now that ticks per frame are small enough to give me room, add dynamic, silhouette-preserving, level of detail to Alias models to slow it down again. I hope to finish debugging dynamic LOD by this weekend. It is working, but I am still seeing polygons popping rotationally though not translationally. At least Q2 engine frame rate stops being Alias model complexity dependent and remains stable, which to me is a more important goal than higher average frame rate.

The LOD code is actually stand-alone enough to pull into ION's own engine Aidoru, which I can make no progress because there is so much Quake and Quake 2 engine work left for ION games in development.  Hopefully Aidoru can evolve from Q2, but I am not counting on it. :(

I am describing my Q2 work in progress in this .plan partly to encourage id programmers to program these things instead of me. I doubt this ruse would work. ;p I am worried how much my Q2 code already diverges from Q2 license, but it appears the Carmack/Hook bug fixes/optimizations are orthogonal even on a module level from mine, so I did not screw up. I downloaded the latest Q2 patch and my Q2 version is still faster, so I feel better I did not duplicate engineering work. (It is currently not that much faster again with my LOD in progress, but I am ADDING polygons for close objects for data set simulation purpose and frame rate stability, so.)

Maybe Ms. Carly Taylor can give out Carly points to Carmack and Hook for programming some Q2 stuff. I don't think anybody wants Corrinne points. :(

I am also bounded by the polygon-based nature of Q2 model animation format, which with its now higher polygon count, data cache thrash minimization is becoming a problem. After putting in polygon-based LOD into Q2, poly-based appears to be even less probable than description-based as what I would choose as a LOD solution. I would appreciate experiencial testimonials from other LODers out there.

Yes, my New Year's resolution list is actually my Christmas vacation task list summary. This way I cheat and have a better chance of meeting my own resolution. :) Happy New Year to you all.
	
    